# Default values for mimir-monolithic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: grafana/mimir
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.11.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false 
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9009

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: config
    configMap:
      name: mimir-monolithic-cm

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: config
    mountPath: /etc/mimir

nodeSelector: {}

tolerations: []

affinity: {}

# -------------------------------------
# Configuration for `minio` child chart
# -------------------------------------
minio:
  enabled: true
  replicas: 1
  # Minio requires 2 to 16 drives for erasure code (drivesPerNode * replicas)
  # https://docs.min.io/docs/minio-erasure-code-quickstart-guide
  # Since we only have 1 replica, that means 2 drives must be used.
  drivesPerNode: 2
  rootUser: mimir
  rootPassword: supersecret
  buckets:
    - name: mimir
      policy: none
      purge: false
  persistence:
    size: 5Gi
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  serviceAccount:
    create: true
    name: "minio-msa" 
# Config for Mimir
# Do not use this configuration in production.
# It is for demonstration purposes only.
mimir:
  config: |
    target: all,alertmanager,overrides-exporter
    multitenancy_enabled: false
    common:
      storage:
        backend: s3
        s3:
          endpoint: "{{ .Release.Name }}-minio:9000"
          access_key_id: mimir
          secret_access_key: supersecret
          insecure: true
          bucket_name: mimir

    # Blocks storage requires a prefix when using a common object storage bucket.
    blocks_storage:
      storage_prefix: blocks
      tsdb:
        dir: /data/ingester

    ruler:
      rule_path: /data/ruler
      alertmanager_url: http://127.0.0.1:8080/alertmanager
      ring:
        # Quickly detect unhealthy rulers to speed up the tutorial.
        heartbeat_period: 2s
        heartbeat_timeout: 10s

    alertmanager:
      data_dir: /data/alertmanager
      external_url: http://localhost:9009/alertmanager

    store_gateway:
      sharding_ring:
        replication_factor: 1
    
    distributor:
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: memberlist

    ingester:
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: memberlist
        replication_factor: 1

    server:
      http_listen_port: 9009
      log_level: error
